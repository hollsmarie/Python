{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red202\green202\blue202;\red70\green137\blue204;\red23\green23\blue23;
\red212\green214\blue154;\red140\green211\blue254;\red194\green126\blue101;\red202\green202\blue202;\red23\green23\blue23;
\red183\green111\blue179;}
\margl1440\margr1440\vieww20680\viewh6860\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl360\partightenfactor0
\cf3 \cb4 \strokec3 def\cf2 \strokec2  \cf5 \strokec5 index\cf2 \strokec2 (\cf6 \strokec6 request\cf2 \strokec2 ):\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb4 \'a0\'a0\'a0\'a0context = \{\cb1 \
\cb4 \'a0\'a0\'a0\'a0\'a0\'a0\'a0	\cf7 \strokec7 "leagues"\cf2 \strokec2 : League.objects.filter(\cf6 \strokec6 name__contains\cf2 \strokec2 =\cf7 \strokec7 "baseball\'94\cf2 \strokec2 ), #filtered for leagues that included the name \'93baseball\'94\
\pard\pardeftab720\sl360\partightenfactor0
\cf2  		\cf7 \strokec7 "leagues"\cf2 \strokec2 : League.objects.filter(\cf6 \strokec6 name__contains\cf2 \strokec2 =\cf7 \strokec7 "women"\cf2 \strokec2 ), #filtered for leagues that included the name \'93women\'94\
\cf7 \strokec7 		"leagues"\cf2 \strokec2 : League.objects.filter(\cf6 \strokec6 name__contains\cf2 \strokec2 =\cf7 \strokec7 "hockey\'94\cf2 \strokec2 ),#filtered for leagues that included the name \'93hockey\'94\
\cf7 \strokec7 		"leagues"\cf2 \strokec2 : League.objects.exclude(\cf6 \strokec6 name__contains\cf2 \strokec2 =\cf7 \strokec7 "football\'94\cf2 \strokec2 ),#excluded leagues that included the name \'93football\'94\
		\cf7 \strokec7 "leagues"\cf2 \strokec2 : League.objects.filter(\cf6 \strokec6 name__contains\cf2 \strokec2 =\cf7 \strokec7 "conference\'94\cf2 \strokec2 ),#filters for leagues that include the name conference\
\cf7 \strokec7 		"leagues"\cf2 \strokec2 : League.objects.filter(\cf6 \strokec6 name__contains\cf2 \strokec2 =\cf7 \strokec7 "atlantic"\cf2 \strokec2 ), #filters for leagues that include the name \'93atlantic\'94 \
\cf7 \strokec7 		"teams"\cf2 \strokec2 : Team.objects.filter(\cf6 \strokec6 location__contains\cf2 \strokec2 =\cf7 \strokec7 "dallas\'94\cf2 \strokec2 ),#filters for teams that have the location of \'93Dallas\'94\
\cf7 \strokec7 		"teams"\cf2 \strokec2 : Team.objects.filter(\cf6 \strokec6 team_name__contains\cf2 \strokec2 =\cf7 \strokec7 "raptors"\cf2 \strokec2 ), #filters for teams that include the name \'93raptors\'94 in their team name\
\cf7 \strokec7 		"teams"\cf2 \strokec2 : Team.objects.filter(\cf6 \strokec6 location__contains\cf2 \strokec2 =\cf7 \strokec7 "city\'94\cf2 \strokec2 ),#filters for teams that include the name \'93city\'94 in their location\
\cf7 \strokec7 		"teams"\cf2 \strokec2 : Team.objects.filter(\cf6 \strokec6 team_name__startswith\cf2 \strokec2 =\cf7 \strokec7 \'93T\'94\cf2 \strokec2 ), #filters for team name that start with the letter T\
\'a0\'a0\'a0\'a0		\cf7 \strokec7 "teams"\cf2 \strokec2 : Team.objects.order_by(\cf7 \strokec7 "location"\cf2 \strokec2 ), #orders ALL of the teams by their location. Order by is always alphabetical\
\'a0\'a0\'a0\'a0 	\cf7 \strokec7 "teams"\cf2 \strokec2 : Team.objects.order_by(\cf7 \strokec7 "-team_name\'94\cf2 \strokec2 ),# orders by team name, reverse alphabetical\
\'a0\'a0\'a0\'a0		\cf7 \strokec7 "players"\cf2 \strokec2 : Player.objects.filter(\cf6 \strokec6 last_name__contains\cf2 \strokec2 =\cf7 \strokec7 "cooper\'94\cf2 \strokec2 ),#filters through all of the players for those with a last name that contains \'93cooper\'94\
		\cf7 \strokec7 "players"\cf2 \strokec2 : Player.objects.filter(\cf6 \strokec6 first_name__contains\cf2 \strokec2 =\cf7 \strokec7 "Joshua"\cf2 \strokec2 ),\cf8 \cb9 \outl0\strokewidth0 #filters through all of the players for those with a first name that contains \'93Joshua\'94\cf2 \cb1 \outl0\strokewidth0 \strokec2 \
		\cf7 \cb4 \strokec7 "players"\cf2 \strokec2 : Player.objects.filter(\cf6 \strokec6 last_name__contains\cf2 \strokec2 =\cf7 \strokec7 "Cooper"\cf2 \strokec2 ).exclude(\cf6 \strokec6 first_name__contains\cf2 \strokec2 =\cf7 \strokec7 "Joshua"\cf2 \strokec2 ), #filters through ll of the players for those with a last name of Cooper and excludes from the list those with a first name of Joshua\
		\cf7 \strokec7 "players"\cf2 \strokec2 : Player.objects.filter(\cf6 \strokec6 first_name__contains\cf2 \strokec2 =\cf7 \strokec7 "Alexander"\cf2 \strokec2 ) | Player.objects.filter(\cf6 \strokec6 first_name__contains\cf2 \strokec2 =\cf7 \strokec7 "Wyatt"\cf2 \strokec2 ), #filters for players with first name of Alexander, and again filters for those with the name of Wyatt and compiles them both\cb1 \
\
\
\
\
\cb4 \
\cb1 \
\
\
\
\
\
\
\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb4 \'a0\'a0\'a0\'a0\}\cb1 \
\cb4 \'a0\'a0\'a0\'a0\cf10 \strokec10 return\cf2 \strokec2  render(request, \cf7 \strokec7 "leagues/index.html"\cf2 \strokec2 , context)\cb1 \
\
}